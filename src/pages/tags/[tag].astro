---
import type { MarkdownInstance } from 'astro';
import BaseLayout from '../../layouts/BaseLayout.astro';
import BlogPost from '../../components/BlogPost.astro';

type AstroBlogPostWithParams = {params: {tag: string}, props: { posts: MarkdownInstance<Record<string, any>>[]}};

export async function getStaticPaths() : Promise<AstroBlogPostWithParams[]> {
  
  const allPosts = await Astro.glob('../posts/*.md');
  const uniqueTags = [...new Set(allPosts.map((post) => post.frontmatter.tags).flat())];

  const retVal2 = uniqueTags.map((tag) => {
    const filteredPosts = allPosts.filter((post) => post.frontmatter.tags.includes(tag));
      return {
        params: { tag },
        props: { posts: filteredPosts },
      };
    }); 

  return retVal2;

}

const { tag } = Astro.params;
const { posts } = Astro.props;

---
<BaseLayout pageTitle={tag}>
  <p>Posts tagged with {tag}</p>
  <ul>
    {posts.map((post) => <BlogPost url={post.url} title={post.frontmatter.title}/>)}
  </ul>
</BaseLayout>